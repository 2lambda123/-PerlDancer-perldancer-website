<h2>Installing Dancer</h2>

<p>
Install Dancer via CPAN:
</p>

<pre class="shell">
$ sudo cpan Dancer
</pre>

<h2>Creating an application</h2>

<p>Since version 0.9904, a helper is shipped with the distribution
which lets you create an application with a single command:

<pre class="shell">
$ dancer -a mywebapp
+ [D] mywebapp 
+ [F] mywebapp/app.psgi
+ [F] mywebapp/config.yml
+ [D] mywebapp/environments
+ [F] mywebapp/environments/development.yml
+ [F] mywebapp/environments/production.yml
+ [D] mywebapp/views
+ [F] mywebapp/views/index.tt
+ [D] mywebapp/views/layouts
+ [F] mywebapp/views/layouts/main.tt
+ [F] mywebapp/mywebapp.pl
+ [D] mywebapp/lib
+ [F] mywebapp/lib/mywebapp.pm
+ [D] mywebapp/lib/mywebapp
+ [D] mywebapp/public
+ [D] mywebapp/public/css
+ [F] mywebapp/public/css/style.css
+ [F] mywebapp/public/css/error.css
+ [D] mywebapp/public/images
+ [F] mywebapp/public/404.html
+ [F] mywebapp/public/dispatch.fcgi
+ [F] mywebapp/public/dispatch.cgi
+ [F] mywebapp/public/500.html
+ [D] mywebapp/t
+ [F] mywebapp/t/002_index_route.t
+ [F] mywebapp/t/001_base.t
+ [F] mywebapp/Makefile.PL
</pre>

<p>Everything is ready and works out of the box. It's already a working "Hello
World" application waiting to be  hacked into whatever you like.</p>

<h2>Hacking into the routes</h2>

<pre class="prettyprint">
# myapp.pm
use Dancer;

get '/' => sub {
    'Hello world!'
};

# add other routes here and there...

dance;
</pre>

<h2>Running the dance</h2>

<pre class="shell">
$ cd mywebapp
$ ./mywebapp.pl
>> Listening on 127.0.0.1:3000
== Entering the dance floor ...
</pre>

<p>
The above shows Dancer acting as a mini web server, but of course Dancer webapps
can also run from nearly any web server using Plack/PSGI.
</p>

